# 1:     program-->declaration-list
# 2:     declaration-list-->declaration declaration-list'
# 3:     declaration-list'-->declaration declaration-list' | empty
# 4:     declaration-->var-declaration | fun-declaration
# 5:     var-declaration-->type-specifier id ; | type-specifier id [ num ]
# 6:     type-specifier-->int | void
# 7:     fun-declaration--> type-specifier id ( params ) compound-stmt
# 8:     params-->param-list | void
# 9:     param-list-->param param-list'
# 10:    param-list'-->, param param-list' | empty
# 11:    param--> type-specifier id | type-specifier id [ ]
# 12:    compound-stmt-->{ local-declarations statement-list }
# 13:    local-declarations-->local-declarations'
# 14:    local-declarations'-->var-declaration local-declarations' | empty
# 15:    statement-list--> statement-list'
# 16:    statement-list'-->statement statment-list' | empty
# 17:    statement-->expression-stmt | compound-stmt | selection-stmt | iteration-stmt | return-stmt
# 18:    expression-stmt-->expression ; | ;
# 19:    selection-stmt-->if ( expression ) statement | if ( expression ) statement else statement
# 20:    iteration-stmt-->while ( expression ) statement
# 21:    return-stmt--> return ; | return expression ;
# 22:    expression-->var = expression | simple expression
# 23:    var-->id | id [ expression ]
# 24:    simple-expression--> additive-expression relop additive-expression | additive-expression
# 25:    relop--> <= | < | > | >= | == | !=
# 26:    additive-expression--> term additive-expression'
# 27:    additive-expression'--> addop term additive-expression' | empty
# 28:    addop--> + | -
# 29:    term--> factor term'
# 30:    term'--> mulop factor term' | empty
# 31:    mulop--> * | /
# 32:    factor-->( expression ) | var | call | num
# 33:    call-->id ( args )
# 34:    args--> arg-list | empty
# 35:    arg-list--> expression arg-list'
# 36:    arg-list'-->, expression arg-list' | empty
